uppressMessages(library(tidyverse))
p.hgos <- upset(ssClusters.hgos.upset, rev(c("Chromothripsis", "CGR", "ecDNA", "2 or more Foldbacks")),
base_annotations=list(
'Intersection size' = intersection_size(
counts=F,
text_colors=c(on_background="black", on_bar="black"),
mapping=aes(fill=Amplification),
color="black",
linewidth=.1
) + scale_fill_manual(values=c(
'high'='#DC1C13', 'low'='#F1959B', 'no'='white'
)) +
ylab("") +
theme(axis.ticks.y =element_line(color="black",  linewidth = .2),
plot.margin=margin(0,0,0,0, unit="cm"))
),
matrix=(
intersection_matrix(
geom=geom_point(
shape='square',
size=.9
),
segment=geom_segment(
linewidth=.3
)
)),
sort_sets=FALSE,
set_sizes=FALSE,
name="",
themes=upset_default_themes(
text=element_text(color='black', size=7),
panel.grid.minor=element_blank(),
panel.grid.major.x=element_blank(),
panel.grid.major.y = element_line(linewidth = .2),
legend.key.size=unit(.2, "cm"),
axis.text=element_text(color='black', size=7),
axis.text.x = element_blank(),
plot.margin=margin(0,0,0,0, unit="cm"),
legend.margin=margin(0,0,0,0, unit="cm"),
legend.position=c(-0.45,0.75)
)
)
p.hgos
ggsave("cgr_upset_hgos.pdf", p.hgos, width=19/3, height=5, units = "cm")
ssClusters.paros.upset <- ssClustersOut %>%
filter(donor_id %in% paros_donors) %>%
filter(classification != "cluster") %>%
select(donor_id, region, ident, classification, amp_status, aa_classification, isFoldback) %>%
mutate(
aa_classification =  ifelse(grepl("Cyclic-ecDNA", aa_classification),"aa-Cyclic-ecDNA","."),
) %>%
ungroup() %>%
mutate(Chromothripsis = ifelse(classification == "chromothripsis", 1, 0),
CGR = ifelse(classification == "cgr", 1, 0),
ecDNA = ifelse(aa_classification == "aa-Cyclic-ecDNA", 1, 0),
Amplification = amp_status,
"2 or more Foldbacks" = ifelse(isFoldback == "yes", 1, 0),) %>%
mutate(Amplification=factor(Amplification, levels=rev(c('high', 'low', 'no')))) %>%
select(Chromothripsis, CGR, ecDNA, Amplification, "2 or more Foldbacks")
p.paros <- upset(ssClusters.paros.upset, rev(c("Chromothripsis", "CGR", "ecDNA", "2 or more Foldbacks")),
base_annotations=list(
'Intersection size' = intersection_size(
counts=F,
text_colors=c(on_background="black", on_bar="black"),
mapping=aes(fill=Amplification),
color="black",
linewidth=.1
) + scale_fill_manual(values=c(
'high'='#DC1C13', 'low'='#F1959B', 'no'='white'
)) +
ylab("") +
theme(axis.ticks.y =element_line(color="black",  linewidth = .2),
plot.margin=margin(0,0,0,0, unit="cm"))
),
matrix=(
intersection_matrix(
geom=geom_point(
shape='square',
size=.9
),
segment=geom_segment(
linewidth=.3
)
)),
sort_sets=FALSE,
set_sizes=FALSE,
name="",
themes=upset_default_themes(
text=element_text(color='black', size=7),
panel.grid.minor=element_blank(),
panel.grid.major.x=element_blank(),
panel.grid.major.y = element_line(linewidth = .2),
legend.key.size=unit(.25, "cm"),
axis.text=element_text(color='black', size=7),
axis.text.x = element_blank(),
plot.margin=margin(0,0,0,0, unit="cm"),
legend.position=c(-0.45,0.75)
)
)
p.paros
ggsave("cgr_upset_paros.pdf", p.paros, width=19/3, height=5, units = "cm")
save.image("cgr_upset.Rdata")
uppressMessages(library(tidyverse))
suppressMessages(library(tidyverse))
suppressMessages(library(cowplot))
suppressMessages(library(ReConPlot))
options(expressions= 500000,
stringsAsFactors=F)
setwd("/mnt/codon/DATA/osteosarcoma/analysis/rearrangement_plots/")
processSV <- function(sv_filename, chromosomes){
svs = read_tsv(sv_filename, col_names = T)
svs=svs[svs$filter=="PASS",]
svs= svs[which(svs$chr1 %in% paste0("chr",c(1:22,"X", "Y")) &  svs$chr2 %in% paste0("chr",c(1:22,"X", "Y")) ),]
svs = svs[which(svs$chr1 %in% chromosomes | svs$chr2 %in% chromosomes),]
svs = svs %>% mutate(start1=pos1, start2=pos2, chromosome1=chr1, chromosome2=chr2,
strand1=ifelse(ori=="DEL" | ori=="t2tINV","+",
ifelse(ori=="DUP" | ori=="h2hINV","-", ";")),
strand2=ifelse(ori=="DUP" | ori=="t2tINV","+",
ifelse(ori=="DEL" | ori=="h2hINV","-", ";"))) %>%
unite(strands, c(strand1, strand2), sep="") %>%
select(chr1, pos1,  chr2, pos2,  strands) %>%
mutate(chr1 = as.character(chr1),
chr2 = as.character(chr2),
pos1 = as.numeric(pos1),
pos2 = as.numeric(pos2))
return(svs)
}
processCN <- function(cn_filename, chromosomes){
cn = read_tsv(cn_filename, col_names = T)
names(cn)[1] = "chromosome"
cn$majorAlleleCopyNumber = round(cn$majorAlleleCopyNumber)
cn$minorAlleleCopyNumber = round(cn$minorAlleleCopyNumber)
cn$raw_copyNumber = cn$copyNumber
cn$copyNumber=round(cn$copyNumber)
# cn$copyNumber=cn$majorAlleleCopyNumber + cn$minorAlleleCopyNumber
cn=cn[which(cn$chromosome %in% chromosomes),]
cn <- cn %>% select(chromosome, start, end, copyNumber, minorAlleleCopyNumber) %>%
dplyr::rename("chr"=chromosome)
return(cn)
}
svDir = "/mnt/codon/DATA/osteosarcoma/analysis/output_files/sv_bedpe/"
cnDir = "/mnt/codon/DATA/osteosarcoma/analysis/output_files/cn_files/"
sv_list = list.files(svDir, pattern="*.bedpe", full.names = T)
cn_list = list.files(cnDir, pattern="*.tsv", full.names = T)
#Case 1: 215000258	chr1-chr13	RB1
case1_title="215000258"
case1_chrs <- c("chr1", "chr13")
case1_selection <- data.frame(chr=case1_chrs,
start=c(110000000, 25000000),
end=c(118000000, 60000000))
case1_sv_file = sv_list[grepl("215000258", sv_list)]
case1_svs =  processSV(case1_sv_file, case1_chrs)
case1_cn_file = cn_list[grepl("215000258", cn_list)]
case1_cn = processCN(case1_cn_file, case1_chrs)
case1_recon = ReConPlot(as.data.frame(case1_svs), as.data.frame(case1_cn), chr_selection=case1_selection,
genes="RB1",
title=case1_title,
size_gene_label = 4, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=7,
legend_SV_types=FALSE,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/12,
max.cn = 4,   npc_now = .00625 * 3,
scale_ticks=2000000, genome_version = "hg38")
case1_recon
#Case 2: 215000258	chr15	.
case2_title="215000258"
case2_chrs <- c("chr15")
case2_selection <- data.frame(chr=case2_chrs,
start=NA,
end=NA)
case2_sv_file = sv_list[grepl("215000258", sv_list)]
case2_svs =  processSV(case2_sv_file, case2_chrs)
case2_cn_file = cn_list[grepl("215000258", cn_list)]
case2_cn = processCN(case2_cn_file, case2_chrs)
case2_recon = ReConPlot(as.data.frame(case2_svs), as.data.frame(case2_cn), chr_selection=case2_selection,
title=case2_title,
size_gene_label = 4, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=7,
legend_SV_types=FALSE,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/12,
max.cn = 4,   npc_now = .00625 * 3,
scale_ticks=2000000, genome_version = "hg38")
case2_recon
#Case 3: 215001648	chr12	.
case3_title="215001648"
case3_chrs <- c("chr12")
case3_selection <- data.frame(chr=case3_chrs,
start=8000000,
end=35000000)
case3_sv_file = sv_list[grepl("215001648", sv_list)]
case3_svs =  processSV(case3_sv_file, case3_chrs)
case3_cn_file = cn_list[grepl("215001648", cn_list)]
case3_cn = processCN(case3_cn_file, case3_chrs)
case3_recon = ReConPlot(as.data.frame(case3_svs), as.data.frame(case3_cn), chr_selection=case3_selection,
title=case3_title,
size_gene_label = 4, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=7,
legend_SV_types=FALSE,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/12,
max.cn = 6,   npc_now = .00625 * 3,
scale_ticks=2000000, genome_version = "hg38")
case3_recon
#Case 4: DO52601	chr17 TP53
case4_title="DO52601"
case4_chrs <- c("chr17")
case4_selection <- data.frame(chr=case4_chrs,
start=NA,
end=NA)
case4_sv_file = sv_list[grepl("DO52601", sv_list)]
case4_svs =  processSV(case4_sv_file, case4_chrs)
case4_cn_file = cn_list[grepl("DO52601", cn_list)]
case4_cn = processCN(case4_cn_file, case4_chrs)
case4_recon = ReConPlot(as.data.frame(case4_svs), as.data.frame(case4_cn), chr_selection=case4_selection,
genes = "TP53",
title=case4_title,
size_gene_label = 4, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=7,
legend_SV_types=FALSE,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/12,
max.cn = 4,   npc_now = .00625 * 3,
scale_ticks=2000000, genome_version = "hg38")
case4_recon
p <- plot_grid(case1_recon, case2_recon, case3_recon, case4_recon,
nrow=2, align="hv", axis="trbl")
save_plot("reconplot_examples_canonical.pdf", p, base_height = 12, base_width = 30, units = "cm")
#Case 4: DO52601	chr17 TP53
case4_title="DO52601"
case4_chrs <- c("chr17")
case4_selection <- data.frame(chr=case4_chrs,
start=NA,
end=NA)
case4_sv_file = sv_list[grepl("DO52601", sv_list)]
case4_svs =  processSV(case4_sv_file, case4_chrs)
case4_cn_file = cn_list[grepl("DO52601", cn_list)]
case4_cn = processCN(case4_cn_file, case4_chrs)
case4_recon = ReConPlot(as.data.frame(case4_svs), as.data.frame(case4_cn), chr_selection=case4_selection,
genes = "TP53",
title="PB_15",
size_gene_label = 4, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=7,
legend_SV_types=FALSE,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/12,
max.cn = 4,   npc_now = .00625 * 3,
scale_ticks=2000000, genome_version = "hg38")
case4_recon
p <- plot_grid(case1_recon, case2_recon, case3_recon, case4_recon,
nrow=2, align="hv", axis="trbl")
save_plot("reconplot_DO52601_canonical.pdf", p, base_height = 5, base_width = 19/2, units = "cm")
case4_recon = ReConPlot(as.data.frame(case4_svs), as.data.frame(case4_cn), chr_selection=case4_selection,
genes = "TP53",
title="PB_15",
size_gene_label = 5/.pt, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=7,
legend_SV_types=FALSE,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/12,
max.cn = 4,   npc_now = .00625 * 3,
scale_ticks=2000000, genome_version = "hg38")
case4_recon
save_plot("reconplot_DO52601_canonical.pdf", case4_recon, base_height = 5, base_width = 19/2, units = "cm")
case4_recon = ReConPlot(as.data.frame(case4_svs), as.data.frame(case4_cn), chr_selection=case4_selection,
genes = "TP53",
title="PB_15",
size_gene_label = 5/.pt, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=7,
legend_SV_types=T,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/12,
max.cn = 3,   npc_now = .00625 * 3,
scale_ticks=5000000, genome_version = "hg38")
save_plot("reconplot_DO52601_canonical.pdf", case4_recon, base_height = 4, base_width = 19/2, units = "cm")
case4_recon = ReConPlot(as.data.frame(case4_svs), as.data.frame(case4_cn), chr_selection=case4_selection,
genes = "TP53",
title="PB_15",
size_gene_label = 5/.pt, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",
percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=5,
legend_SV_types=T, pos_SVtype_description=0,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/12,
max.cn = 3,   npc_now = .00625 * 3,
scale_ticks=5000000, genome_version = "hg38")
save_plot("reconplot_DO52601_canonical.pdf", case4_recon, base_height = 4, base_width = 19/2, units = "cm")
case4_recon = ReConPlot(as.data.frame(case4_svs), as.data.frame(case4_cn), chr_selection=case4_selection,
genes = "TP53",
title="PB_15",
size_gene_label = 5/.pt, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",
percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=5,
legend_SV_types=T, pos_SVtype_description=0, scale_separation_SV_type_labels = 1/30,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/12,
max.cn = 3,   npc_now = .00625 * 3,
scale_ticks=5000000, genome_version = "hg38")
save_plot("reconplot_DO52601_canonical.pdf", case4_recon, base_height = 4, base_width = 19/2, units = "cm")
case4_recon = ReConPlot(as.data.frame(case4_svs), as.data.frame(case4_cn), chr_selection=case4_selection,
genes = "TP53",
title="PB_15",
size_gene_label = 5/.pt, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",
percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=5,
legend_SV_types=T, pos_SVtype_description=0,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/22,
max.cn = 3,   npc_now = .00625 * 3,
scale_ticks=5000000, genome_version = "hg38")
save_plot("reconplot_DO52601_canonical.pdf", case4_recon, base_height = 4, base_width = 19/2, units = "cm")
case4_recon = ReConPlot(as.data.frame(case4_svs), as.data.frame(case4_cn), chr_selection=case4_selection,
genes = "TP53",
title="PB_15",
size_gene_label = 5/.pt, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",
percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=5,
legend_SV_types=T, pos_SVtype_description=-1000000,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/22,
max.cn = 3,   npc_now = .00625 * 3,
scale_ticks=5000000, genome_version = "hg38")
save_plot("reconplot_DO52601_canonical.pdf", case4_recon, base_height = 4, base_width = 19/2, units = "cm")
case4_recon = ReConPlot(as.data.frame(case4_svs), as.data.frame(case4_cn), chr_selection=case4_selection,
genes = "TP53",
title="PB_15",
size_gene_label = 5/.pt, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",
percentage_increase_y_axis = .10,
size_title = 7,  size_chr_labels=5,
legend_SV_types=T, pos_SVtype_description=-5000000,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/22,
max.cn = 3,   npc_now = .00625 * 3,
scale_ticks=5000000, genome_version = "hg38")
save_plot("reconplot_DO52601_canonical.pdf", case4_recon, base_height = 4, base_width = 19/2, units = "cm")
case4_recon = ReConPlot(as.data.frame(case4_svs), as.data.frame(case4_cn), chr_selection=case4_selection,
genes = "TP53",
title="PB_15",
size_title = 7,  size_chr_labels=5,
size_gene_label = 5/.pt, size_text=5,
scaling_cn_SVs = 1/6, xscale=10*10^6,
color_minor_cn="steelblue2",
percentage_increase_y_axis = .10,
legend_SV_types=T, pos_SVtype_description=-2000000,
curvature_interchr_SVs = -0.3,
scale_separation_SV_type_labels=1/22,
max.cn = 3,   npc_now = .00625 * 3,
scale_ticks=5000000, genome_version = "hg38")
save_plot("reconplot_DO52601_canonical.pdf", case4_recon, base_height = 4, base_width = 19/2, units = "cm")
ttt <- read_csv("../OS_master_clinical_data_v2.csv")
View(ttt)
ttt <- read_csv("../OS_master_clinical_data_v1.csv")
View(ttt)
ttt <- read_csv("../OS_master_clinical_data_v2.csv")
unique(ttt$Syndrome_radiation_associated)
ttt %>% filter(grepl("Li Fraumeni", Syndrome_radiation_associated))
ttt %>% filter(grepl("Li Fraumeni", Syndrome_radiation_associated)) %>% select(Donor_id)
library(devtools)
knitr::opts_chunk$set(echo = TRUE)
chrs=c("chr10")
chr_selection = data.frame(
chr=chrs,
start=rep(0 ,length(chrs)),
end=rep (250000000, length(chrs))
)
plot = ReConPlot(sv_data,
cn_data,
chr_selection=chr_selection,
legend_SV_types=T,
pos_SVtype_description=115000000,
scale_separation_SV_type_labels=1/23,
title="Example with annotation",
custom_annotation=snv_data,
ann_dot_col="darkred",
ann_size_dot=.5,
ann_y_title="SNV-VAF",
#Label for y-axis
ann_rel_size=.4
#Relative size to main plot
)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ReConPlot)
data(test_data)
ls()
print(head(sv_data))
chrs=c("chr10")
chr_selection = data.frame(
chr=chrs,
start=rep(0 ,length(chrs)),
end=rep (250000000, length(chrs))
)
plot = ReConPlot(sv_data,
cn_data,
chr_selection=chr_selection,
legend_SV_types=T,
pos_SVtype_description=115000000,
scale_separation_SV_type_labels=1/23,
title="Example with annotation",
custom_annotation=snv_data,
ann_dot_col="darkred",
ann_size_dot=.5,
ann_y_title="SNV-VAF",
#Label for y-axis
ann_rel_size=.4
#Relative size to main plot
)
chrs=c("chr10")
chr_selection = data.frame(
chr=chrs,
start=rep(0 ,length(chrs)),
end=rep (250000000, length(chrs))
)
plot = ReConPlot(sv_data,
cn_data,
chr_selection=chr_selection,
legend_SV_types=T,
pos_SVtype_description=115000000,
scale_separation_SV_type_labels=1/23,
title="Example with annotation",
custom_annotation=snv_data,
ann_dot_col="darkred",
ann_dot_size=.5,
ann_y_title="SNV-VAF",
#Label for y-axis
ann_rel_size=.4
#Relative size to main plot
)
print(plot)
chrs=c("chr10")
chr_selection = data.frame(
chr=chrs,
start=rep(0 ,length(chrs)),
end=rep (250000000, length(chrs))
)
plot = ReConPlot(sv_data,
cn_data,
chr_selection=chr_selection,
legend_SV_types=T,
pos_SVtype_description=115000000,
scale_separation_SV_type_labels=1/23,
title="Example with annotation",
custom_annotation=snv_data,
ann_dot_col="darkred",
ann_dot_size=.5,
ann_y_title="SNV-VAF",
#Label for y-axis
ann_rel_size=.4
#Relative size to main plot
)
print(plot)
chrs=c("chr10")
chr_selection = data.frame(
chr=chrs,
start=rep(0 ,length(chrs)),
end=rep (250000000, length(chrs))
)
plot = ReConPlot(sv_data,
cn_data,
chr_selection=chr_selection,
legend_SV_types=T,
pos_SVtype_description=115000000,
scale_separation_SV_type_labels=1/23,
title="Example with annotation",
custom_annotation=snv_data,
ann_dot_col="darkred",
ann_dot_size=.5,
ann_y_title="SNV-VAF",
#Label for y-axis
ann_rel_size=.4
#Relative size to main plot
)
print(plot)
devtools::build_manual()
setwd("codon/jespejo/ReConPlot/")
devtools::build_manual()
devtools::coument()
devtools::document()
devtools::document()
devtools::document()
devtools::build_manual()
devtools::check()
devtools::check()
load("data/test_data.RData")
rm(.Random.seed)
save.image("data/test_data.RData")
devtools::check()
